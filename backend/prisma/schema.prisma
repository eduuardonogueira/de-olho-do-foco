// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  firstName String  @map("first_name") @db.VarChar(50)
  lastName  String  @map("last_name") @db.VarChar(50)
  email     String  @unique @db.VarChar(50)
  password  String  @db.VarChar(100)
  role      String  @db.VarChar(20)
  phone     String? @db.VarChar(20)

  points Point[]

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp()
}

model Point {
  id          String  @id @default(uuid())
  type        String  @db.VarChar(50)
  description String? @db.VarChar(200)
  position    String? @db.VarChar(10)

  coordinatesId String      @unique @map("coordinates_id")
  userId        String      @map("user_id")
  coordinates   Coordinates @relation(fields: [coordinatesId], references: [id])
  user          User        @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp()
}

model Coordinates {
  id       String @id @default(uuid())
  lat      Float
  lng      Float
  alt      Float?
  rotation Float?

  point Point? @relation
}
